// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VIAEvent.Infrastructure.SqliteDmPersistence;

#nullable disable

namespace VIAEvent.Infrastructure.SqliteDmPersistence.Migrations
{
    [DbContext(typeof(SqliteWriteDbContext))]
    [Migration("20240425123429_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Events.EventToGuest", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("EventToGuest");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Events.VeaEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentStatusState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("Description", "VIAEventAssociation.Core.Domain.Aggregates.Events.VeaEvent.Description#EventDescription", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("MaxGuests", "VIAEventAssociation.Core.Domain.Aggregates.Events.VeaEvent.MaxGuests#EventMaxGuests", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("INTEGER")
                                .HasColumnName("MaxGuests");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Title", "VIAEventAssociation.Core.Domain.Aggregates.Events.VeaEvent.Title#EventTitle", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Title");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Visibility", "VIAEventAssociation.Core.Domain.Aggregates.Events.VeaEvent.Visibility#EventVisibility", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("DisplayName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Visibility");
                        });

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Guests.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("Email", "VIAEventAssociation.Core.Domain.Aggregates.Guests.Guest.Email#ViaEmail", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Email");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("FirstName", "VIAEventAssociation.Core.Domain.Aggregates.Guests.Guest.FirstName#GuestFirstName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("FirstName");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("LastName", "VIAEventAssociation.Core.Domain.Aggregates.Guests.Guest.LastName#GuestLastName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("LastName");
                        });

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Locations.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("LocationMaxGuests", "VIAEventAssociation.Core.Domain.Aggregates.Locations.Location.LocationMaxGuests#LocationMaxGuests", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("INTEGER")
                                .HasColumnName("LocationMaxGuests");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("LocationName", "VIAEventAssociation.Core.Domain.Aggregates.Locations.Location.LocationName#LocationName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("LocationName");
                        });

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Events.EventToGuest", b =>
                {
                    b.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Events.VeaEvent", null)
                        .WithMany("IntendedParticipants")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Guests.Guest", null)
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Events.VeaEvent", b =>
                {
                    b.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Locations.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.OwnsMany("VIAEventAssociation.Core.Domain.Aggregates.Events.Entities.Invitation.EventInvitation", "EventInvitations", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("GuestId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("VeaEventId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("GuestId");

                            b1.HasIndex("VeaEventId");

                            b1.ToTable("EventInvitation");

                            b1.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Guests.Guest", null)
                                .WithMany()
                                .HasForeignKey("GuestId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("VeaEventId");
                        });

                    b.OwnsOne("VIAEventAssociation.Core.Domain.Aggregates.Events.EventDuration", "Duration", b1 =>
                        {
                            b1.Property<Guid>("VeaEventId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("EndDateTime")
                                .HasColumnType("TEXT")
                                .HasColumnName("EndDateTime");

                            b1.Property<DateTime>("StartDateTime")
                                .HasColumnType("TEXT")
                                .HasColumnName("StartDateTime");

                            b1.HasKey("VeaEventId");

                            b1.ToTable("Events");

                            b1.WithOwner()
                                .HasForeignKey("VeaEventId");
                        });

                    b.Navigation("Duration");

                    b.Navigation("EventInvitations");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Guests.Guest", b =>
                {
                    b.OwnsOne("VIAEventAssociation.Core.Domain.Aggregates.Guests.ProfilePictureUrl", "ProfilePictureUrl", b1 =>
                        {
                            b1.Property<Guid>("GuestId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("ProfilePictureUrl");

                            b1.HasKey("GuestId");

                            b1.ToTable("Guests");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");
                        });

                    b.Navigation("ProfilePictureUrl");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Events.VeaEvent", b =>
                {
                    b.Navigation("IntendedParticipants");
                });
#pragma warning restore 612, 618
        }
    }
}
